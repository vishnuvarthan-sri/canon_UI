[{"C:\\Users\\USER\\cannon-app\\src\\index.jsx":"1","C:\\Users\\USER\\cannon-app\\src\\reducers\\cannon-reducer.js":"2","C:\\Users\\USER\\cannon-app\\src\\config.js":"3","C:\\Users\\USER\\cannon-app\\src\\actions\\types.js":"4","C:\\Users\\USER\\cannon-app\\src\\actions\\cannon-action.js":"5","C:\\Users\\USER\\cannon-app\\src\\reducers\\index.js":"6","C:\\Users\\USER\\cannon-app\\src\\components\\Home.jsx":"7","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonIndex.jsx":"8","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonTabView.jsx":"9","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonStore.jsx":"10","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonProduct.jsx":"11"},{"size":627,"mtime":1606818039251,"results":"12","hashOfConfig":"13"},{"size":1310,"mtime":1606745421648,"results":"14","hashOfConfig":"13"},{"size":435,"mtime":1607429338376,"results":"15","hashOfConfig":"13"},{"size":1076,"mtime":1606745429671,"results":"16","hashOfConfig":"13"},{"size":3482,"mtime":1607429107166,"results":"17","hashOfConfig":"13"},{"size":192,"mtime":1606745422798,"results":"18","hashOfConfig":"13"},{"size":3654,"mtime":1606903577187,"results":"19","hashOfConfig":"13"},{"size":2365,"mtime":1607433909228,"results":"20","hashOfConfig":"13"},{"size":1373,"mtime":1606971319097,"results":"21","hashOfConfig":"13"},{"size":21504,"mtime":1607415897492,"results":"22","hashOfConfig":"13"},{"size":2053,"mtime":1607414949947,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"h7ydem",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\cannon-app\\src\\index.jsx",[],["52","53"],"C:\\Users\\USER\\cannon-app\\src\\reducers\\cannon-reducer.js",["54","55"],"import {\r\n    FETCH_CANNON_TEMPLATE_SUCCESS_ACTION,\r\n    FETCH_CANNON_TEMPLATE_FAILURE_ACTION,\r\n    FETCH_CANNON_STORE_SUCCESS_ACTION,\r\n    FETCH_CANNON_STORE_FAILURE_ACTION,\r\n    FETCH_AUDITORS_SUCCESS_ACTION,\r\n  FETCH_AUDITORS_FAILURE_ACTION,\r\n  } from \"../actions/types\";\r\n  \r\n  const CANNON_STATE = {};\r\n  \r\n  export default function(state = CANNON_STATE, action) {\r\n    state = Object.assign({}, state, {});\r\n    switch (action.type) {\r\n      case FETCH_CANNON_TEMPLATE_SUCCESS_ACTION:\r\n        state.cannonTemplate = action.payload.template;\r\n        state.cannonTemplateError = false;\r\n        return state;\r\n      case FETCH_CANNON_TEMPLATE_FAILURE_ACTION:\r\n        state.cannonTemplateError = true;\r\n        return state;\r\n      case FETCH_CANNON_STORE_SUCCESS_ACTION:\r\n        state.cannonStoreList = action.payload.stores;\r\n        state.cannonStoreError = false;\r\n        return state;\r\n      case FETCH_CANNON_STORE_FAILURE_ACTION:\r\n        state.cannonStoreError = true;\r\n        return state;\r\n        case FETCH_AUDITORS_SUCCESS_ACTION:\r\n      state.cannonAuditors = action.payload.data;\r\n      state.fetchAuditorsError = false;\r\n      return state;\r\n    case FETCH_AUDITORS_FAILURE_ACTION:\r\n      state.fetchAuditorsError = true;\r\n      return state;\r\n      \r\n    }\r\n    return state;\r\n  }\r\n  ","C:\\Users\\USER\\cannon-app\\src\\config.js",[],"C:\\Users\\USER\\cannon-app\\src\\actions\\types.js",[],"C:\\Users\\USER\\cannon-app\\src\\actions\\cannon-action.js",["56"],"C:\\Users\\USER\\cannon-app\\src\\reducers\\index.js",[],["57","58"],"C:\\Users\\USER\\cannon-app\\src\\components\\Home.jsx",["59","60","61","62"],"import React from 'react'\r\nimport { Header, Icon, Image, Menu, Segment, Sidebar, Dropdown, Checkbox } from 'semantic-ui-react'\r\nimport CannonIndex from './cannon/cannonIndex.jsx'\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: true,\r\n      menu: \"cannon\",\r\n       message:\"\",\r\n    };\r\n  }\r\ntogglebar=(e)=>{\r\n  this.setState({\r\n    visible:!this.state.visible\r\n  })\r\n\r\n}\r\nhandleClick = (e) => {\r\nthis.setState({\r\nmessage:\"CANNON\"\r\n});\r\n}\r\nhandleClick2 = (e) => {\r\n  this.setState({\r\n  message:\"GAMEPAD\"\r\n  });\r\n  }\r\n\r\n// display =()=>{\r\n//   var message =this.state.message;\r\n//   message.map((top,index)=>{\r\n//     <div key={index}>\r\n//       <p style={{ textAlign:'center' }}><b>{top}</b></p>\r\n//     </div>\r\n//   }\r\n//   )\r\n  \r\n// }\r\n\r\n//   handleItemClick= (e,{name})  => {\r\n//  console.log(name)\r\n//     // this.props.history\r\n//     var messsage =\"hello\"\r\n//     this.setState=({\r\n//       message:messsage,\r\n//     });\r\n//   }\r\n\r\n  render() {\r\n    var activeItem = this.state.menu;\r\n    var pusherStyle = { height: \"100%\", overflow: \"auto\", width: \"85%\" };\r\n    if(!this.state.visible){\r\n      pusherStyle.width =\"100%\"\r\n    }\r\n    return (\r\n      <div style={{height:\"100%\"}}>\r\n        <Segment raised style={{ backgroundColor: \"#fafafa\", height: 60 }}>\r\n          <div style={{ display: \"inline-block\" }}>\r\n            <Icon\r\n              style={{\r\n                display: \"inline-block\",\r\n                cursor: \"pointer\",\r\n                float: \"left\",\r\n                color: \"#606060\",\r\n                marginTop: 4\r\n              }}\r\n              onClick={this.togglebar}\r\n              size=\"big\"\r\n              name=\"bars\"\r\n            />\r\n          </div>\r\n         \r\n        </Segment>\r\n        <Sidebar.Pushable as={Segment}\r\n          style={{\r\n            marginTop: -15,\r\n            display: \"flex\",\r\n            borderRadius: 0,\r\n            height: \"200%\"\r\n          }}>\r\n          <Sidebar\r\n            as={Menu}\r\n            visible={this.state.visible}\r\n            activeIndex=\"0\"\r\n            style={{\r\n              flex:\"0 0 150px\",\r\n              backgroundColor: \"#2c3e50\",\r\n              paddingTop: 30\r\n            }}\r\n            animation=\"slide along\"\r\n            width=\"thin\"\r\n            icon=\"labeled\"\r\n            vertical\r\n            inverted\r\n          >\r\n            <Menu.Item\r\n              name=\"cannon\"\r\n              active={activeItem === \"cannon\"}\r\n              color=\"teal\"\r\n              onClick={this.handleClick}\r\n              style={{ marginTop: 5 }}\r\n            >\r\n              <Icon name=\"camera\" />\r\n            Cannon\r\n         </Menu.Item>\r\n         <Menu.Item\r\n              name=\"gamepad\"\r\n              active={activeItem === \"gamepad\"}\r\n              color=\"teal\"\r\n              onClick={this.handleClick2}\r\n              style={{ marginTop: 5 }}\r\n            >\r\n              <Icon name=\"gamepad\" />\r\n            Gamepad\r\n         </Menu.Item>\r\n          </Sidebar>\r\n\r\n          <Sidebar.Pusher  style={pusherStyle} >\r\n\r\n            <Segment basic\r\n                style={{\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                padding: \"10px 0px 0px 0px\"\r\n              }}  \r\n            >\r\n            {/* <div style={{ paddingLeft: 650,paddingBottom:200, flex: \"0 0 450px\" }}>\r\n           <p style={{ textAlign:'center' }}> <b>{this.state.message}</b></p> \r\n           </div> */}\r\n              {activeItem === \"cannon\" && <CannonIndex />}\r\n            </Segment>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n",["63","64"],"C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonIndex.jsx",["65","66"],"C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonTabView.jsx",[],"C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonStore.jsx",["67","68","69","70","71","72"],"import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table-6\";\r\nimport 'react-table-6/react-table.css'\r\nimport {\r\n    Icon,\r\n    Segment,\r\n    Checkbox,\r\n    Button,\r\n    Modal,\r\n    Statistic,\r\n    Grid,\r\n    Dropdown,\r\n    Label,\r\n    Image,\r\n    ModalActions\r\n} from \"semantic-ui-react\";\r\nimport selectTable from \"react-table-6/lib/hoc/selectTable\";\r\nimport CannonProduct from './cannonProduct.jsx';\r\n// var TableSelect = require('react-table-select');\r\n// import TableSelect from \"react-select-table\";\r\n// import 'react-select-table/dist/index.css';\r\nvar CheckBoxTable = selectTable(ReactTable);\r\nexport default class CannonStore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStore: {},\r\n            isStoreView: true,\r\n            Product: true,\r\n            storeId: \"\",\r\n            value: \"Initial Stores\",\r\n            initialAndAssignedStores: [],\r\n            pendingAndCompletedStores: [],\r\n            selection: [],\r\n            userId: [],\r\n            selectAll: true,\r\n            userSelectionAll: false,\r\n            openAssignModal: false,\r\n            cannonStoreList: [],\r\n            storeStatus: \"\"\r\n        };\r\n    }\r\n    onClose = () => {\r\n        this.props.onClose();\r\n    };\r\n\r\n    IntialTable = () => {\r\n\r\n        this.setState({\r\n            isStoreView: false\r\n        });\r\n        this.setState({\r\n            value: \"Initial Stores\"\r\n        });\r\n    }\r\n    IntialTable2 = () => {\r\n\r\n        this.setState({\r\n            isStoreView: false\r\n        });\r\n        this.setState({\r\n            value: \"Assigned Stores\"\r\n        });\r\n    }\r\n    CompletedTable = () => {\r\n\r\n\r\n        this.setState({\r\n            isStoreView: true\r\n        });\r\n        this.setState({\r\n            value: \"Inprogress Stores\"\r\n        });\r\n    }\r\n    CompletedTable2 = () => {\r\n        this.setState({\r\n            isStoreView: true\r\n        });\r\n        this.setState({\r\n            value: \"Completed Stores\"\r\n        });\r\n    }\r\n\r\n    onProduct = () => {\r\n        this.setState({\r\n            Product: false\r\n        });\r\n    }\r\n\r\n    closeProduct = () => {\r\n        this.setState({\r\n            Product: true\r\n        });\r\n    }\r\n\r\n    Assign = () => {\r\n        this.setState({\r\n            selectAll: false\r\n        })\r\n    }\r\n    AssignOff = () => {\r\n        this.setState({\r\n            selectAll: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var userlist = [{\r\n            region: \"south\",\r\n            state: \"Tamilnadu\",\r\n            city: \"Madurai\",\r\n            cisVersion: \"Version1\",\r\n            shipSiteLocation: \"Kanyakumari\",\r\n\r\n        },\r\n        {\r\n            region: \"south\",\r\n            state: \"Tamilnadu\",\r\n            city: \"Coimbatore\",\r\n            cisVersion: \"Version1\",\r\n            shipSiteLocation: \"Kanyakumari\",\r\n\r\n        },\r\n        {\r\n            region: \"south\",\r\n            state: \"Tamilnadu\",\r\n            city: \"Trichy\",\r\n            cisVersion: \"Version1\",\r\n            shipSiteLocation: \"Kanyakumari\",\r\n\r\n        },\r\n        {\r\n            region: \"North\",\r\n            state: \"Uttarpradeh\",\r\n            city: \"Lucknow\",\r\n            cisVersion: \"Version2\",\r\n            shipSiteLocation: \"Kolkata\",\r\n\r\n        }\r\n\r\n        ];\r\n        var Completelist = [{\r\n            region: \"North\",\r\n            state: \"Uttarpradeh\",\r\n            city: \"Lucknow\",\r\n            cisVersion: \"Version2\",\r\n            shipSiteLocation: \"Kolkata\",\r\n\r\n        }];\r\n        var Modallist = [{\r\n            email: \"xxx123@gmail.com\"\r\n        },\r\n        {\r\n            email: \"yyy456@gmail.com\"\r\n        },\r\n        {\r\n            email: \"zzz789@gmail.com\"\r\n        }]\r\n        var columns = [\r\n            {\r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                        onClick={this.onProduct}\r\n                    />\r\n            }\r\n        ];\r\n        var Assignedcolumns = [\r\n            {\r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                   \r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"Assignee\",\r\n                accessor: \"userName\",\r\n                width: 125,\r\n                style: { textAlign: \"left\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.userName}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                  \r\n                    />\r\n            }\r\n        ];\r\n        var InitialColumn = [\r\n            {\r\n                Header: \"Region\",\r\n                accessor: \"region\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.region}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"State\",\r\n                accessor: \"state\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.state}\r\n                    \r\n                    />\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.city}\r\n                   \r\n                    />\r\n            },\r\n            {\r\n                Header: \"CIS Version\",\r\n                accessor: \"cisVersion\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.cisVersion}\r\n                   \r\n                    />\r\n            },\r\n\r\n            {\r\n                Header: \"Store Name\",\r\n                accessor: \"shipSiteLocation\",\r\n                style: { textAlign: \"center\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.shipSiteLocation}\r\n                    \r\n                    />\r\n            }\r\n        ];\r\n\r\n        const UserColumn = [\r\n            {\r\n                Header: \"Email Id's\",\r\n                accessor: \"email\",\r\n                style: { textAlign: \"left\", cursor: \"pointer\" },\r\n                Cell: row =>\r\n                    <AuditTableCell\r\n                        row={row.original}\r\n                        text={row.original.email}\r\n                    />\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div style={{ flexGrow: 1, display: \"flex\", flexFlow: \"column\" }}>\r\n                { this.state.Product &&\r\n                    <div>\r\n                        <div style={{ padding: 20, display: \"inline-block\" }}>\r\n                            <Segment\r\n                                onClick={this.onClose}\r\n                                style={{\r\n                                    color: \"#808080\",\r\n                                    float: \"right\",\r\n                                    cursor: \"pointer\",\r\n                                    marginTop: 20,\r\n                                    display: \"inline-block\",\r\n                                    // top:\"15\",\r\n                                    position: \"absolute\",\r\n                                    right: 50\r\n                                }}\r\n                            >\r\n                                <Icon name=\"arrow\" className=\"left large\" color=\"brown\" />\r\n\r\n\r\n                            </Segment>\r\n                            {/* <Segment\r\n                                onClick={this.onProduct}\r\n                                style={{\r\n                                    color: \"#808080\",\r\n                                    float: \"right\",\r\n                                    cursor: \"pointer\",\r\n                                    marginTop: 20,\r\n                                    display: \"inline-block\",\r\n                                    // top:\"15\",\r\n                                    position: \"absolute\",\r\n                                    right: 20\r\n                                }}\r\n                            >\r\n                                <Icon name=\"arrow\" className=\"right large\" color=\"brown\" />\r\n\r\n\r\n                            </Segment> */}\r\n                            {/* <Button >Download Report</Button> */}\r\n\r\n                            <h1\r\n                                style={{\r\n                                    paddingLeft: 30,\r\n                                    color: \"orange\",\r\n                                    display: \"inline-block\"\r\n                                }}\r\n                            >\r\n                                Canon Stores\r\n              </h1>\r\n                            <div style={{ display: \"inline-block\", marginLeft: 30 }}>\r\n                                <Button\r\n\r\n\r\n                                    label={\r\n                                        <Label size=\"medium\" color=\"grey\" style={{ cursor: \"pointer\" }} >\r\n                                            Initial Stores\r\n                                     </Label>\r\n                                    }\r\n                                    value=\"Initial Stores\"\r\n                                    onClick={this.IntialTable}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                                <Button\r\n\r\n\r\n                                    label={\r\n                                        <Label\r\n                                            color=\"blue\"\r\n                                            size=\"medium\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n\r\n                                        >\r\n                                            Assigned Stores\r\n                    </Label>\r\n                                    }\r\n                                    value=\"Assigned Stores\"\r\n\r\n                                    onClick={this.IntialTable2}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                                <Button\r\n\r\n\r\n                                    // label=\"InProgress Stores\"\r\n                                    label={\r\n                                        <Label\r\n                                            color=\"green\"\r\n                                            size=\"medium\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            InProgress Stores\r\n                    </Label>\r\n                                    }\r\n                                    value=\"InProgress Stores\"\r\n                                    onClick={this.CompletedTable}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                                <Button\r\n\r\n\r\n                                    label={\r\n                                        <Label\r\n                                            color=\"red\"\r\n                                            size=\"medium\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            Completed Stores\r\n                    </Label>\r\n                                    }\r\n                                    value=\"Completed Stores\"\r\n\r\n                                    onClick={this.CompletedTable2}\r\n                                    style={{ marginLeft: 10 }}\r\n                                />\r\n                            </div>\r\n                            <div style={{ display: \"flex\", marginBottom: 10, marginRight: 10 }}>\r\n                                <div style={{ marginLeft: \"auto\", order: 1 }}>\r\n                                    <Button\r\n                                        color=\"teal\" onClick={this.Assign}// style={{ border: \"2px solid teal\" }}\r\n                                    >\r\n                                        Assign Stores\r\n                                </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!this.state.selectAll &&\r\n                            <div>\r\n                                <Modal\r\n                                    open={!this.state.selectAll}\r\n                                    onClose={this.AssignOff}\r\n                                    size=\"small\">\r\n                                    <Modal.Content>\r\n                                        <CheckBoxTable\r\n                                            noDataText=\"We couldn't find anything\"\r\n                                            filterable={true}\r\n                                            defaultPageSize={20}\r\n                                            //   defaultFilterMethod={this.searchFilter}\r\n                                            data={Modallist}\r\n                                            columns={UserColumn}\r\n                                            //   className=\"-striped -highlight\"\r\n                                            //   ref={r => (this.checkboxTable = r)}\r\n                                            //   toggleSelection={this.usertoggleSelection}\r\n                                            //   selectAll={this.state.selectAll}\r\n                                            // toggleAll={this.toggleAll}\r\n                                            selectType=\"checkbox\"\r\n                                        // isSelected={this.isUserSelected.bind(this)}\r\n                                        //   getTrProps={this.rowFn}\r\n                                        />\r\n                                    </Modal.Content>\r\n                                    <Modal.Actions>\r\n                                        <Button color=\"red\" onClick={this.AssignOff}>\r\n                                            <Icon name=\"remove\" /> Close\r\n                </Button>\r\n                                    </Modal.Actions>\r\n                                </Modal>\r\n                            </div>}\r\n\r\n\r\n\r\n\r\n\r\n                        <div style={{ display: \"flex\", flexGrow: 1, flexFlow: \"column\" }}>\r\n                        <div>\r\n                            {this.state.isStoreView\r\n                                ? <ReactTable\r\n                                    noDataText=\"We couldn't find anything\"\r\n                                    data={\r\n                                        this.state.value === \"Inprogress Stores\" ? userlist : this.state.value === \"Completed Stores\" ? Completelist : []\r\n                                    }\r\n                                    columns={\r\n                                        this.state.value === \"Inprogress Stores\" ? columns : this.state.value === \"Completed Stores\" ? columns : []\r\n                                    }\r\n                                    style={{ height: \"85%\", width: \"95%\", marginLeft: 30 }}\r\n\r\n                                    filterable={true}\r\n                                    defaultPageSize={20}\r\n                                    sortable={true}\r\n                                    onClick={this.onProduct}\r\n                                />\r\n                                : <CheckBoxTable\r\n                                    noDataText=\"We couldn't find anything\"\r\n                                    filterable={true}\r\n                                    defaultPageSize={20}\r\n                                    // defaultFilterMethod={this.searchFilter}\r\n                                    data={userlist}\r\n                                    columns={\r\n                                        this.state.value === \"Initial Stores\" ? InitialColumn : this.state.value === \"Assigned Stores\" ? Assignedcolumns : []\r\n                                    }\r\n                                    style={{ height: \"85%\", width: \"95%\", marginLeft: 30 }}\r\n                                    sortable={true}\r\n                                    // className=\"-striped -highlight\"\r\n                                    // ref={r => (this.checkboxTable = r)}\r\n                                    // toggleSelection={this.usertoggleSelection}\r\n                                    // selectAll={this.state.selectAll}\r\n                                    // // toggleAll={this.toggleAll}\r\n                                     selectType=\"checkbox\"\r\n                                     \r\n                                // // isSelected={this.isUserSelected.bind(this)}\r\n                                // getTrProps={this.rowFn}\r\n                                />\r\n\r\n                            }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                       \r\n                    </div>}\r\n\r\n\r\n\r\n                { !this.state.Product &&\r\n                    <div style={{ flexGrow: 1, display: \"flex\" }}>\r\n                        <CannonProduct onClose={this.closeProduct} />\r\n                    </div>}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction AuditTableCell(props) {\r\n    function onClick() {\r\n        props.onClick(props.row);\r\n    }\r\n    return (\r\n        <div style={props.style} onClick={onClick} >\r\n            {props.text}\r\n        </div>\r\n    );\r\n}","C:\\Users\\USER\\cannon-app\\src\\components\\cannon\\cannonProduct.jsx",["73","74","75","76","77","78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":12,"column":3,"nodeType":"88","endLine":39,"endColumn":4},{"ruleId":"89","severity":1,"message":"90","line":14,"column":5,"nodeType":"91","messageId":"92","endLine":37,"endColumn":6},{"ruleId":"93","severity":1,"message":"94","line":2,"column":13,"nodeType":"95","messageId":"96","endLine":2,"endColumn":22},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},{"ruleId":"93","severity":1,"message":"99","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":16},{"ruleId":"93","severity":1,"message":"100","line":2,"column":24,"nodeType":"95","messageId":"96","endLine":2,"endColumn":29},{"ruleId":"93","severity":1,"message":"101","line":2,"column":55,"nodeType":"95","messageId":"96","endLine":2,"endColumn":63},{"ruleId":"93","severity":1,"message":"102","line":2,"column":65,"nodeType":"95","messageId":"96","endLine":2,"endColumn":73},{"ruleId":"82","replacedBy":"103"},{"ruleId":"84","replacedBy":"104"},{"ruleId":"93","severity":1,"message":"105","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":29},{"ruleId":"93","severity":1,"message":"106","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":25},{"ruleId":"93","severity":1,"message":"102","line":7,"column":5,"nodeType":"95","messageId":"96","endLine":7,"endColumn":13},{"ruleId":"93","severity":1,"message":"107","line":10,"column":5,"nodeType":"95","messageId":"96","endLine":10,"endColumn":14},{"ruleId":"93","severity":1,"message":"108","line":11,"column":5,"nodeType":"95","messageId":"96","endLine":11,"endColumn":9},{"ruleId":"93","severity":1,"message":"101","line":12,"column":5,"nodeType":"95","messageId":"96","endLine":12,"endColumn":13},{"ruleId":"93","severity":1,"message":"100","line":14,"column":5,"nodeType":"95","messageId":"96","endLine":14,"endColumn":10},{"ruleId":"93","severity":1,"message":"109","line":15,"column":5,"nodeType":"95","messageId":"96","endLine":15,"endColumn":17},{"ruleId":"93","severity":1,"message":"107","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":12},{"ruleId":"93","severity":1,"message":"102","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":11},{"ruleId":"93","severity":1,"message":"110","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"111","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":8},{"ruleId":"93","severity":1,"message":"112","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":8},{"ruleId":"93","severity":1,"message":"113","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":12,"endColumn":7},{"ruleId":"93","severity":1,"message":"114","line":13,"column":3,"nodeType":"95","messageId":"96","endLine":13,"endColumn":7},{"ruleId":"93","severity":1,"message":"100","line":14,"column":3,"nodeType":"95","messageId":"96","endLine":14,"endColumn":8},{"ruleId":"115","severity":1,"message":"116","line":65,"column":17,"nodeType":"117","endLine":68,"endColumn":18},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'FileSaver' is defined but never used.","Identifier","unusedVar",["118"],["119"],"'Header' is defined but never used.","'Image' is defined but never used.","'Dropdown' is defined but never used.","'Checkbox' is defined but never used.",["118"],["119"],"'fetchCannonTemplatesAction' is defined but never used.","'fetchCannonStoreAction' is defined but never used.","'Statistic' is defined but never used.","'Grid' is defined but never used.","'ModalActions' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Label' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]